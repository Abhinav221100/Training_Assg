using System;
using System.Collections;
using System.Data.SqlTypes;

namespace Banking
{
    public delegate void UnderBalanceEventHandler(object source, EventArgs args);
    public delegate void BalanceZeroEventHandler(object source, EventArgs args);


    public class Account
    {
        public double accountNumber;
        public string customerName;
        public double balance;
        public double minimumBalance = 1000;
        public event UnderBalanceEventHandler UnderBalance;
        public event BalanceZeroEventHandler BalanceZero;

        public Account(double accNumber, string customerName, double balance)
        {
            this.accountNumber = accNumber;
            this.customerName = customerName;
            this.balance = balance;
        }

        public void Withdraw(double amount)
        {
            if (this.balance < amount)
            {
                Console.WriteLine("Insufficient Funds");
                if (this.balance == 0)
                {
                    OnBalanceZero();
                }
                else if (this.balance < this.minimumBalance)
                {
                    OnUnderBalance();
                }
                return ;
            }
            else
            {
                this.balance -= amount;
                Console.WriteLine("--------------------------------------");
                Console.WriteLine("Money has been withdrawn successfully.");
                Console.WriteLine("--------------------------------------");
                if (this.balance == 0)
                {
                    OnBalanceZero();
                }
                else if (this.balance < this.minimumBalance)
                {
                    OnUnderBalance();
                }
                return;
            }
        }

        public void Deposit(double amount)
        {
            this.balance += amount;
            Console.WriteLine("--------------------------------------");
            Console.WriteLine("Money has been deposited successfully.");
            Console.WriteLine("--------------------------------------");
            if (this.balance < this.minimumBalance)
            {
                OnUnderBalance();
            }
            else if (this.balance == 0)
            {
                OnBalanceZero();
            }
        }

        public virtual void OnUnderBalance()
        {
            if(UnderBalance != null)
            {
                UnderBalance(this,EventArgs.Empty);
            }
        }

        public virtual void OnBalanceZero()
        {
            if(BalanceZero != null)
            {
                BalanceZero(this,EventArgs.Empty);
            }
        }
    }

    public class Program
    {
        public static void Main()
        {
            Console.WriteLine("Enter the account number below : ");
            int accNumber = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter the customer name below : ");
            string custName = Console.ReadLine();
            Console.WriteLine("Enter the balance in account below : ");
            int accBalance = int.Parse(Console.ReadLine());

            Account acc1 = new Account(accNumber, custName, accBalance);//publisher
            MinBalance minBal = new MinBalance();//subscriber
            ZeroBalance zeroBal = new ZeroBalance();//subscriber

            acc1.UnderBalance += minBal.OnUnderBalance;
            acc1.BalanceZero += zeroBal.OnBalanceZero;


            Console.WriteLine("Choose one of the operations below :\n" +
                              "1.Withdraw\n" +
                              "2.Deposit\n");
            int option = int.Parse(Console.ReadLine());
            switch (option)
            {
                case 1:
                    Console.WriteLine("Enter the amount to be withdrawn :");
                    int amountToBeWithdrawn = int.Parse(Console.ReadLine());
                    acc1.Withdraw(amountToBeWithdrawn);
                    break;
                case 2:
                    Console.WriteLine("Enter the amount to be deposited :");
                    int amountToBeDeposited = int.Parse(Console.ReadLine());
                    acc1.Deposit(amountToBeDeposited);
                    break;
            }
        }

    }

    public class MinBalance
    {
        public void OnUnderBalance(object source, EventArgs args)
        {
            Console.WriteLine("The account balance is under the minimum balance. Please deposit money.");
        }
    }

    public class ZeroBalance
    {
        public void OnBalanceZero(object source, EventArgs args)
        {
            Console.WriteLine("The account balance is zero. Please deposit money.");
        }
    }
}